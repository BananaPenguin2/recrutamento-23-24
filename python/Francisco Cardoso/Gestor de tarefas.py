

# Imagens engraçadas para ocasiões específicas
xauxau_meme="""\n
⠀⠀⠀⠀⠀⠀⢀⣠⠤⠖⠈⠉⠉⠀⠀⠀⠀⠉⠢⡀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⣴⠏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢦⡀⠀⠀⠀⠀
⠀⠀⠀⣠⠞⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠞⠋⢙⣦⡈⣷⡄⠀⠀⠀
⠀⣀⠶⠁⠀⠀⣀⣀⡀⠀⠀⠀⠀⠀⡴⠁⠀⠀⠿⢿⡟⣌⢿⠀⠀⠀
⣠⡿⠀⢠⣜⠉⠀⠀⠙⢷⢄⠀⠀⠀⢧⠀⠀⠀⠀⠀⠀⠘⡆⢧⡀⠀
⣯⠃⠀⢾⣿⠗⠀⠀⠀⠀⡽⠀⠀⠀⠈⠳⢄⣀⠀⠀⠀⡰⠃⠘⣵⡄
⡏⠀⠀⠘⡄⠀⠀⠀⣠⠞⠁⠀⠀⠀⠀⠀⠀⠀⠉⠉⠁⠀⠀⠀⢱⡇
⡅⠀⠀⠀⠙⠒⠔⠚⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇
⣧⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠀⠀⠀⠀⠀⠀⠀⡗
⡿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⡀⠀⠀⠀⠀⢸⡇⠀⠀⠀⠀⠀⠀⣇
⠹⣷⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠷⣤⣤⣤⣤⠞⠁⠀⠀⠀⠀⠀⠀⣸
⠀⠸⣇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⠇
⠀⠀⢇⠳⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡏⠀
⠀⠀⠈⠀⠀⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀"""

skull_meme="""⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⣤⣤⣴⣶⣶⣾⣿⢿⣿⢿⣿⣷⣶⣦⣤⣀⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣤⣴⣶⢿⡟⢯⡹⢉⠏⣱⣉⢧⣘⣮⣙⢮⡙⣤⢢⠙⢍⠫⢹⠻⡻⢶⣦⣄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣠⣴⣶⡿⢟⠻⢭⡙⠲⡌⠃⣔⠣⡜⡱⢊⠷⢉⠒⡍⢞⡙⠌⣃⠋⠂⠆⡀⠣⠐⠉⡈⠝⠻⣿⣶⣤⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣠⣾⠟⠋⣡⠘⡍⢎⡓⠦⣉⠳⣌⠳⣈⢷⡈⡕⢃⠂⠀⠀⠘⠀⠉⡒⠌⢊⠑⡢⢀⠀⠀⠃⠘⠈⠱⡀⠍⠻⣿⣿⣦⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⢀⣴⡿⠛⠁⢀⡜⢢⡑⠘⡃⠌⡐⢌⡳⣌⠿⣙⠢⡐⡌⣀⠀⠀⠀⡀⢀⠀⠁⡘⢢⡁⢀⠁⢃⠀⠀⡀⠀⠀⠀⠈⠑⠲⣭⡻⣿⣷⣄⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⣠⣿⠟⠁⠁⠀⢩⠐⣢⠐⠤⠉⢠⡜⣮⠱⣋⠗⣤⢣⡱⢣⠆⣏⠲⡈⠖⣀⠂⡀⢈⠡⠘⢁⠊⠠⢀⠀⠀⠀⠀⠀⠀⠀⠀⠈⣃⠃⠿⣿⣷⡀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⣴⣿⠋⠀⠀⢀⠠⡁⢊⠄⡁⢶⣜⢦⡝⢢⢏⠷⣙⠖⣣⡝⢧⡛⡤⢳⢍⠂⠈⠀⠁⠀⠀⠀⠀⠀⠁⠠⠁⠀⠀⠀⠀⠀⠀⠀⠀⠐⡀⠀⠹⣿⣿⡄⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⣼⡿⢃⠣⡈⢇⠪⡅⢠⠉⠦⣜⢫⡞⣿⡜⣧⣛⣾⡝⣮⡱⢎⢣⡝⣰⠣⢌⡌⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠠⠹⣿⣿⡆⠀⠀⠀⠀
⠀⠀⠀⠀⣼⣿⠀⠌⢂⡱⠌⣒⠡⠂⣍⠲⣌⡳⢿⣱⣛⢶⠻⣔⡩⢶⡙⢮⢣⠜⣄⢣⠊⠔⡈⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠹⣿⣿⡄⠀⠀⠀
⠀⠀⠀⣼⣿⠇⠰⡜⠃⠤⡜⢀⠡⠐⠬⡑⢢⡝⣋⢳⡹⣎⢷⣣⢙⡦⣝⡣⡝⢮⠰⡭⣍⠐⡀⠀⢉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡀⠀⢛⣿⣿⡄⠀⠀
⠀⠀⢰⣿⢋⠀⡙⢀⠠⠏⢀⠀⢀⠁⡴⣍⠇⡴⣃⠎⣵⣋⠞⡤⢫⠔⣩⠱⢎⡱⢣⡓⢰⡌⢀⡜⡄⠢⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢿⣿⣧⠀⠀
⠀⠀⣼⡏⠂⢡⠐⠠⡉⠄⠀⠀⡜⡸⡔⢩⠚⡤⢣⡚⡵⢫⡟⠱⣆⡽⣁⢋⢦⣝⠣⡜⢧⢌⢢⡑⢮⠐⡠⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⣿⣿⡇⠀
⠀⢸⣿⠁⡀⡄⢂⠠⠀⠀⠀⠡⡐⠱⢈⢡⠒⡈⠡⢘⢡⠣⣜⠳⠀⠍⢁⡚⠮⣜⡠⢽⠲⣌⢧⡙⣌⠠⠄⠠⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠰⢠⢿⣿⣿⠀
⠀⣸⡇⢮⠑⡈⢡⠒⠀⠀⠀⠀⠀⠁⠌⢂⠱⡈⢅⠋⠦⠱⡈⠅⠀⢂⡶⢙⠰⢢⢝⣪⡗⠁⠎⡱⠀⡼⠀⠠⣀⠈⢀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣄⠳⡄⣯⢿⣿⡇
⠀⣿⡙⢆⠢⠄⠡⠁⠀⠀⠀⠀⠀⠘⢀⠢⠐⠐⢪⡔⢂⡄⢰⠁⣀⠍⠶⣤⠂⠍⠎⠇⠐⠈⠲⢁⠞⡁⡄⠑⢈⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡬⢳⡍⣿⣹⣿⡇
⢰⣿⠜⢦⡐⡈⠑⠂⠀⠀⠀⠀⡀⠀⠂⠐⠀⠌⣆⡘⣨⡑⡈⠶⠄⠂⢀⡄⢊⡼⠁⠀⢀⠖⣠⠞⠀⠀⠀⡉⢄⠠⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣾⣏⡧⢎⢿⣽⣿⡇
⢸⣿⣛⠤⠀⠁⡸⠀⠀⠀⠀⠀⠀⠀⠀⠼⠁⠋⠌⡱⠁⢤⠱⣠⢀⡈⢉⠐⠊⠁⠀⠀⠊⠀⡁⠀⠀⢠⣙⢉⠂⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣞⣿⣽⣳⢮⡟⣿⣿⡇
⢸⣿⣏⡖⣡⠂⡗⠀⡄⠀⠀⠀⠄⡀⠀⠀⠐⣐⣸⣴⣯⣤⣷⣼⣆⣩⣶⣷⣦⣀⣀⠈⠀⠀⠀⣀⡀⡀⠩⠄⠂⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣬⣿⣿⣿⣟⡾⣼⣿⣿⣧
⢸⣿⣟⡶⣡⠎⣝⠀⡘⡄⠀⠀⠀⡐⠲⠣⠿⠛⣛⣉⣬⣭⣭⣭⣉⠁⠉⠉⠙⠛⠛⠶⣦⡴⠛⠁⠀⠀⠀⣀⣼⣿⣷⣿⣶⣶⣤⣀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿
⢸⣿⣿⣳⢇⡞⣩⠖⣽⣧⠔⠒⠊⢀⣠⣶⣿⣿⣿⡿⠿⠿⢿⣿⣿⣿⣷⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⣠⣶⣿⣿⣿⡿⠿⠻⢿⣿⣿⣿⣷⣦⣄⣀⠀⠀⠚⣿⣿⣿⣿⣿⣿⣿⣿⣿
⢸⣿⣿⣟⣾⡹⢧⣿⡟⠀⣠⣶⣿⡿⠛⠉⠉⠀⠀⠀⠀⠀⠀⠘⠻⣾⡿⣿⣿⣷⣦⡀⠀⠀⢴⣶⣿⣿⣿⣿⡿⠋⠀⠀⠀⠀⠀⠀⠈⠉⠙⢿⣿⣿⣷⣤⣘⣿⣿⣿⣿⣿⣿⣿⣿
⢸⣿⣿⣿⣳⢿⣿⣿⣷⣿⡿⠛⠁⠀⠀⢀⣠⣤⣤⣄⡀⠀⠀⠀⠀⠙⣿⡜⣻⣿⣿⣗⠐⢀⣼⣿⣿⢟⣿⡟⠀⠀⠀⠀⠀⣀⣤⣤⣤⣄⠀⠀⠀⠉⠻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿
⢸⣿⣿⣷⣿⣻⣿⣿⣿⣿⠁⠀⠀⢀⣾⣿⣿⣿⣿⣿⣿⣦⠀⠀⠀⠀⢸⣿⠘⢿⠋⢹⣷⠟⠉⢿⣿⣾⣿⠀⠀⠀⠀⢠⣾⣿⣿⣿⣿⣿⣷⣄⠀⠀⠀⠘⣿⣿⣿⣿⣿⣿⣿⣿⣿
⢸⣿⣿⣿⣿⢷⣿⣿⣿⡇⠀⠀⠀⣸⣿⣿⣿⣿⣿⣿⣿⣿⡇⠀⠀⠀⢈⣿⡇⠈⣿⣿⣿⠀⠀⠀⠈⢿⣇⠀⠀⠀⠀⣿⣿⣿⣿⣿⣿⣿⣿⣿⡀⠀⠀⠀⢹⣿⣿⣿⣿⣿⣿⣿⣿
⠸⣿⣿⣾⣿⣿⣿⠿⣏⣧⠀⠀⠀⢿⡟⣿⣿⣿⣷⣿⣿⣿⡇⠀⠀⠀⢰⣿⡇⢆⣿⣿⣯⡀⠀⣷⡀⢸⣷⠀⠀⠀⠀⣿⡿⢿⣷⣾⣿⣿⣿⣿⠇⠀⠀⠀⢈⣿⣿⣿⣿⣿⣿⣿⡯
⠀⢻⣿⣿⣿⣿⣿⠂⢹⣿⡀⠀⠀⠘⣿⣽⣿⣿⣿⣿⣿⠟⠁⠀⠀⠀⣾⣿⣷⣾⣿⣿⣷⣶⣄⠹⢿⣄⢿⣆⠀⠀⠀⠘⣷⡹⣿⣿⣿⣿⣿⡟⠀⠀⠀⢀⣿⣿⢹⣿⣿⣿⣿⣿⠇
⠀⠘⣿⡛⢿⣿⣿⠀⠈⢿⣷⠀⠀⠀⠈⠙⠳⠦⠀⠀⠀⠀⠀⠀⢀⣼⣿⣿⠿⣥⣿⣿⣿⣿⣿⣦⠈⢻⣯⣿⣄⠀⠀⠀⠈⠛⠂⠀⠈⠉⠀⠀⠀⠀⢀⡾⠃⣿⢬⣿⣿⠛⢹⡿⠆
⠀⠀⢹⣿⣆⢹⣿⠄⠀⠈⢿⣷⣦⣄⣀⣀⣀⣀⣀⣀⣤⣠⣴⣶⡿⢿⠟⡉⣿⣿⣿⣿⣿⣿⣿⣿⣧⡀⠈⠙⠛⠻⠶⣤⣤⣀⣀⣀⣀⣀⡀⣀⣠⣴⠿⠁⠀⠿⠆⠟⠃⠀⣾⠃⠀
⠀⠀⢸⣿⣿⣿⠅⠀⠀⠀⢾⡀⢬⣽⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣶⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣄⣤⣠⣤⣤⣴⣶⣾⣿⣿⣿⣷⣿⣿⣇⠀⠀⠀⠀⠀⠀⠀⣴⣾⡇⠀⠀
⠀⠀⠸⣿⣯⠉⠂⠀⠀⠀⠀⣹⡖⣿⣿⣿⣿⣿⣿⣿⡿⠿⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡟⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠿⣿⣿⣿⣿⣿⣿⡿⢿⡀⠀⠀⠀⠀⠀⢠⣿⣿⣧⠀⠀
⠀⠀⠀⢿⣿⣇⠀⡀⠀⠀⠀⣻⣷⣾⣿⣿⣿⣿⣿⣿⣧⣶⠎⡿⢿⢿⢘⣿⣿⣿⣿⣿⣧⣿⣿⣽⣿⣿⣿⣿⣻⢿⣿⣿⣧⣾⣿⣻⣿⣷⣿⣶⣿⣧⡀⠀⠀⣀⣴⣿⣿⣿⡇⠀⠀
⠀⠀⠀⠈⢿⣿⣧⣿⣦⣀⣠⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⢟⡂⢀⢂⠃⠀⢹⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠿⢿⣿⠋⢻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣄⣴⣿⣿⡿⣿⡟⠀⠀⠀
⠀⠀⠀⠀⠘⣿⡽⢻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⠙⠧⢠⠀⠀⠀⠀⠻⢿⣿⣿⣿⣿⣿⣿⠿⠋⠀⠀⠈⠑⠚⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠟⢩⣶⡟⠀⠀⠀⠀
⠀⠀⠀⠀⠀⢹⣷⡄⡈⠛⠻⣿⡟⣿⣿⣿⣿⣿⣿⣿⠏⠠⠀⠀⢀⣀⣤⣀⣀⠀⠉⢻⣿⣿⠿⠃⠀⠀⠀⠀⠀⠀⠀⠀⣹⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣟⣡⣶⣿⣿⠃⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⢻⣷⡁⠀⠶⢻⠋⣼⣿⡿⣿⣿⣿⣿⡄⠀⠑⢾⣿⣿⣯⣽⣿⣿⣷⠟⠉⠹⢦⠀⠀⠀⠀⠀⢳⡄⠀⠀⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠃⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠈⣿⣧⠀⠃⢼⠡⠀⢻⣿⢿⣿⢿⣿⣿⣦⣤⣈⣥⣼⣛⣻⣷⣼⣷⣤⣀⣀⣤⣷⣦⣀⣀⣠⣤⣿⣤⣶⣿⣿⣿⣿⣿⣯⡿⢿⣿⣿⣿⣿⣿⣿⡏⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⢿⣿⠄⡀⠈⠀⠁⠂⢻⣿⣿⣆⠀⢸⣏⠛⠛⠋⠉⠛⠋⢻⣿⠉⠉⢿⡏⠁⠙⣿⠉⠙⠉⠉⠋⠉⠉⠁⠀⣀⣾⣿⠋⠀⠈⠻⢿⣽⣿⣿⣿⠃⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⢸⣿⡆⠀⠐⠀⠀⠰⠀⠀⢹⣿⣷⣤⣿⣄⡀⠀⠀⠀⠀⠀⠉⠀⠀⠘⠓⠀⠀⠙⠁⠀⠀⠀⠀⠀⠀⢀⣴⣿⡿⠁⠀⠀⠀⠀⠀⢸⣿⣿⡿⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⡀⠀⠀⠀⠀⠀⠀⠀⢿⣿⣿⣧⡀⠀⠀⠉⠀⠀⠀⠀⠀⠀⢀⠀⠶⡄⠀⠐⠀⠀⠀⠀⠀⢠⣾⣿⡿⠁⠀⠀⠀⠀⠀⠀⠀⣿⣿⡇⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⢻⣿⡅⠀⠀⠀⠀⠀⠀⠀⠈⠿⢿⣿⠻⣷⢄⣤⣀⣠⡄⢀⣀⣀⣈⣀⢀⣧⠀⣀⡤⠀⠀⢠⣾⣻⡟⠁⠀⠀⠀⠀⠀⠀⠀⠀⠐⣻⣿⠃⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠘⣿⣇⠀⠀⣀⠀⠀⠀⠀⠀⠈⠀⡟⢸⣿⣤⣼⣿⣿⣧⣼⣿⣭⣭⣿⣼⣿⣶⣾⣶⣶⣶⣿⣿⣿⡇⠀⠀⠀⠀⠀⠀⠀⢻⣿⣿⣿⡿⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⢿⣿⡀⣸⠀⠀⠀⠀⡁⠠⠀⠙⢠⣿⠻⢿⣿⣿⣿⣿⣿⠿⠛⠻⢿⣿⢿⣿⣿⣿⣿⣿⣿⠿⠛⠀⠀⠀⠀⠀⠀⣀⣀⣴⣿⠟⠁⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠹⣷⣉⠂⠀⠀⠀⠐⠀⠄⠀⢢⡇⠂⠜⡸⠹⡃⠀⠀⠀⠀⠀⠀⠀⢨⣿⣿⠋⠉⣿⣿⣶⡇⠀⠀⠀⢠⣄⣠⣾⣿⡿⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣷⣤⣄⠀⠀⠀⠀⠀⠂⠍⠀⡀⠐⣅⢂⠈⢦⠀⠀⠀⠀⠀⣛⠿⠋⠀⠀⣿⣇⣼⠇⢀⠀⣰⢰⣿⣿⡿⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⠿⣾⣖⣠⠈⢀⠁⡀⢂⠀⠐⢨⠃⠈⣧⡀⠀⠀⣰⣿⠻⣆⠀⠀⢀⣿⢠⡏⢀⢀⣼⣿⡿⠟⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠙⠻⢿⣦⣎⣰⣈⡀⢈⣅⠂⠀⣿⣿⣦⣛⣿⣿⣶⡙⣂⠀⣸⣿⣽⣯⣿⠿⠛⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠙⠻⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠋⠁⢀⠀⠀⢀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀"""

star_meme="""⣴⣶⣶⠿⠟⠛⠻⠷⣶⣶⣶⣤⣄⣀⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⣿⣿⠁⠰⠆⠀⠀⠀⠀⠀⠈⠉⠛⠛⠿⣿⣶⣶⣦⣤⣄⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⢹⣿⣆⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠉⠙⠛⠿⢿⣿⣷⣶⣦⣄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⢻⣿⣇⠀⠀⢠⣤⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠙⠿⢾⣿⣿⣶⣦⣄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠹⣿⣦⡀⢸⣿⣿⣿⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠛⠛⠿⣿⣿⣶⣤⣀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠙⣿⣿⣦⠙⠻⠟⠛⠀⠀⠀⠀⠀⠀⣶⣿⢷⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠛⠛⢿⣿⣷⣦⣤⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠈⠻⣿⣷⣀⡀⠀⠀⠀⠀⠀⠀⠀⠙⠻⣿⣿⡿⠀⠀⠀⠀⠀⠀⠀⢀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠙⠿⣿⣿⢶⣤⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠈⠛⠿⣿⣦⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣾⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠛⠿⣿⣷⣦⣄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠛⠛⢿⣶⣤⣙⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣾⣿⡇⣀⣾⣿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠛⠿⣿⣷⣶⣤⣀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⣿⡍⠛⠻⠶⠤⠀⠀⠀⠀⠀⠀⠀⠀⣼⣿⣿⣿⣿⣿⡏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠛⠿⢿⣿⣶⣤⣀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⣿⣦⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣿⡿⠻⠛⣿⡿⠁⠀⠀⠀⠀⣀⣤⣤⣤⣄⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠙⠿⣿⣷⣦⣄⡀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠛⠻⣷⣶⣶⡶⠀⠀⠀⠀⠀⣼⣿⡇⠀⢸⣿⠇⠀⣠⣴⣾⠟⠛⠉⠉⠉⠉⠛⠻⣶⣤⡂⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠛⢿⣽
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣼⣿⣿⣿⣿⣿⣿⣿⣶⠃⠀⠀⠐⠿⠿⠀⣴⡿⠋⠁⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣿⠿⣷⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣷⣀⣀⣀⡠⠀⠀⠀⠀⠀⠀⣼⡿⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣿⢀⣿⡇⠀⣀⣀⣀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠺⠿⠿⠿⣿⡿⠿⠟⠛⠛⠀⠀⣀⣀⡀⠀⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣴⣿⢣⣾⣿⣥⣾⣿⣿⡉⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⣿⡄⠀⣀⣤⣶⠿⠛⠛⠛⠻⣿⣧⠀⠀⠀⠀⠀⣠⣶⣿⣶⣤⣾⡟⠁⠈⢱⣿⠁⠈⢹⣿⣿⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣿⣾⡿⠋⠀⠀⠀⠀⠀⠀⠈⢻⣧⠀⠀⠀⠀⣿⣿⣿⣿⠟⠁⠀⠀⣠⣿⡟⠀⢀⣿⣿⣿⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢹⡟⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⡷⠶⠿⠿⠛⢋⡉⠁⠀⠀⣠⣾⡿⠋⠀⠀⣸⣿⣿⣿⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣿⡷⣦⣤⣶⣿⣛⣋⣠⣴⡾⠟⠋⠀⠀⠀⣰⣿⣿⣿⣿⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢿⡄⠀⠀⢀⣤⣶⣶⣄⢀⣴⡿⠋⠀⠀⣸⡟⠛⠛⠋⠉⠁⠀⠀⠀⠀⠀⣠⣿⣿⣿⣿⡏⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣇⠀⠀⠈⣿⣿⣿⣿⠿⠋⠀⠀⠀⣠⣿⠁⠀⠀⠀⠀⠀⠀⠀⠀⢀⣼⣿⣿⣿⣿⡿⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣸⡟⠛⠛⠛⢛⡉⠁⠀⠀⠀⠀⣠⣾⡿⠁⠀⠀⠀⠀⠀⠀⠀⣠⣶⣿⣿⣿⣿⣿⡿⠁⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠙⠛⠛⠻⣿⣧⣤⣤⣤⣶⡾⠟⠉⠀⠀⠀⠀⠀⢀⣀⣴⣿⣿⣿⣿⣿⣿⣿⠟⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣿⣿⡏⢩⡥⠄⠀⠀⠀⠀⣀⣠⣤⣶⣿⣿⣿⣿⣿⣿⣿⡿⠟⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣴⣿⠿⢻⣿⣾⣷⣤⣴⣶⣾⣿⣿⣿⣿⣟⣟⣻⣿⣿⠿⠛⠉⠀⢀⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⣾⣿⠛⠁⠀⠰⣿⡟⠉⠙⠛⠛⠛⠛⠛⠛⠛⠛⠛⠋⠉⣀⣀⣀⣀⣴⣿⠟⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣴⣿⣿⠏⠀⠀⠀⠀⠀⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠙⠛⠛⠉⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⣾⣿⠏⠀⠀⠀⠀⠀⠀⠀⢿⣷⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⣾⣿⠟⠁⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀"""





waiting_emogi="""⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⡤⠤⠤⠏⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠂⠤⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡀⡖⠚⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠓⠒⠒⢄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣠⠒⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠑⢄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠔⢘⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠢⡄⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⢀⠴⢁⠔⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠲⡀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⢀⡀⢃⠀⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢆⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠊⠀⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢱⠀⠀⠀⠀
⠀⠀⠀⢀⠮⠄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠁⡆⠀⠀
⠀⠀⢀⠎⡘⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢳⡀⠀
⠀⢀⡎⡝⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⣀⢀⡀⣀⠀⠀⠀⠀⠀⠀⠀⠀⡀⢀⠀⡀⢀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢣⠀
⠀⡾⠄⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⢴⡞⡰⠚⡬⢣⠝⢬⠛⣴⢂⡀⠠⡄⣦⡽⢣⡛⡼⡙⢷⣜⡤⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢧
⣴⢁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⢾⣧⠎⡁⢁⠈⠄⠡⡈⢄⡙⢜⡳⣜⣣⡽⢍⠢⠡⠘⠀⡉⠐⣈⠳⡹⢶⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⡼⠈⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣾⣏⣶⡰⣠⢌⠠⡑⢄⢢⠐⡠⣙⠾⣓⡌⣆⣦⣣⣜⠠⠄⡡⢠⠡⡙⢾⡱⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣳⢾⣿⣿⣿⣿⣾⣷⡌⢆⣃⠚⢤⠑⣎⢶⣿⣿⣿⣿⣿⣿⣦⡑⢄⡒⡉⠶⣑⠂⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠰⢭⣿⣿⣿⣿⣿⣿⣿⣞⢢⡌⡍⠦⡙⡼⣿⣿⣿⣿⣿⣿⣿⡷⣍⢢⠱⣡⠙⡦⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⡝⣿⣿⣿⣿⣿⣿⣿⣏⠶⡸⣜⡱⡹⡜⣿⣿⣿⣿⣿⣿⣿⡿⢦⣣⠳⡤⢛⠤⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⠸⢿⣿⣿⣿⡿⣟⡾⣭⢗⡾⡵⣏⡝⢺⢻⣿⣿⣿⡿⣟⣻⡳⢧⡻⣜⡍⠂⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠁⢋⠽⣻⡼⣝⣧⢿⡼⢯⡝⡓⠆⠈⠡⢋⠼⣣⢟⡼⣣⠷⣽⢯⠗⠭⠐⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⣷⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠡⢚⠛⢎⠻⢚⠣⢉⠐⠀⠀⠀⠀⠈⠑⠎⠹⢉⠛⠌⠂⠈⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⡛⡆⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀
⡇⣷⠀⡆⠀⠀⠀⠀⠀⠀⠀⢀⢀⠀⡀⢀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡎
⠀⠸⡅⢁⠀⠀⠀⠀⠀⡐⣾⣿⣿⣿⣿⣿⣿⣿⣿⣷⣯⣾⣵⣾⣶⣳⣼⣶⣶⣶⣶⣶⣶⣶⣦⣧⣶⣴⣦⣶⣶⣶⣶⣼⣶⣷⣾⣶⣷⣶⣦⠄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡰⠀
⠀⠀⠸⡉⢢⠀⠀⠀⠀⠀⠙⠿⢿⢿⡿⣿⣿⣿⣿⢿⣿⣿⣿⣿⣿⣿⡿⣿⡿⣿⣿⢿⣿⡿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢿⢿⠻⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⣠⠇⠀
⠀⠀⠀⠙⡬⢃⠀⠀⠀⠀⠀⠐⠈⠀⠘⠀⠣⠙⡘⠋⠞⡹⠞⡽⣚⠷⢻⡝⣻⢳⡛⢯⠗⣟⠻⡞⢽⡚⠷⣋⠟⡺⡙⠯⡙⠎⠣⠉⠈⠀⠁⠀⠀⠀⠀⠀⠀⠀⠀⢀⠀⡠⠇⠀⠀
⠀⠀⠀⠀⠈⢂⠱⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⠂⡴⠁⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠱⣀⠂⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠔⢡⠞⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠈⠢⡉⢦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣠⠖⢁⠔⠁⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢆⣀⠢⡀⠀⠀⠀⠐⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠤⢄⠠⠔⠲⠓⠶⠴⠤⠶⠤⣤⣤⣤⣤⣤⣤⣤⣤⣤⣤⡞⢅⠔⠁⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠑⠤⡑⠂⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣈⣀⣀⣤⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠃⠳⣌⠛⠿⣏⡙⣆⠱⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡠⢤⠬⢶⣪⣍⡣⠄⢀⣀⣠⣤⣤⡶⠶⠖⠛⠛⠹⠟⠉⠉⠀⣿⠒⠒⠒⠲⢦⣄⠀⠀⠀⠀⠀⠀⢁⠳⣌⢡⠻⢆⣽⢰⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⢊⡵⠞⡛⣿⣷⠶⠾⠲⠛⠋⠋⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⡼⠃⠀⢀⣀⣀⠀⠹⣟⡀⠀⠀⠀⠀⠀⠈⢼⡧⣙⢼⠇⡼⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⡾⠀⠀⠘⠋⠀⠀⠀⠁⠀⠀⠀⠀⠀⠀⢀⣀⡤⡴⣶⣒⣚⡿⠥⠀⠀⠀⠀⠠⠸⠛⠹⡘⣮⣝⣶⣤⣤⠀⡌⠐⣷⣩⠏⡜⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⣇⠻⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣤⣶⡟⡅⠚⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⢃⣿⡿⢹⡘⢆⢫⠰⣉⣶⠏⡔⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠱⡙⢦⡈⠀⠀⠀⠀⠀⠀⠀⠀⠽⡛⢿⡇⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡠⢴⣡⣾⣯⠑⡂⠈⠀⣹⡷⢂⡟⡰⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⢄⠻⣄⠃⠀⠀⠀⠀⠀⠀⠠⡸⣿⣧⠻⢀⠀⠀⠀⠀⠀⠀⠀⣀⣀⢜⣸⣿⡿⡟⢧⠀⠇⠀⡀⠠⣼⠇⡿⢠⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠑⢌⠳⣄⠂⠀⠀⠀⠀⢀⠓⠹⢿⣿⣮⣱⢤⣀⣲⣾⣯⣴⠾⠾⠛⠛⠃⠧⠉⡄⢈⠐⡠⣆⠟⣉⡞⡱⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠑⢌⠧⡄⠀⠀⠀⠀⠀⠁⢂⣽⣿⠟⡛⠉⠋⠁⠃⠈⠀⠁⠀⠀⠀⢠⣱⣜⣚⡛⠉⣐⣢⠏⡘⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠐⢌⠳⣈⠶⣀⠀⠀⣼⢋⡀⠀⠀⠀⠀⠀⠀⢀⡀⡀⠄⠤⠲⠛⠟⠛⡙⠛⠿⣿⢣⠜⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠑⠨⡑⢌⠓⠦⣕⠁⠀⢀⡠⠾⠄⠂⠉⠀⠀⠁⠈⠀⠀⠀⠀⠀⠀⠐⠀⠘⠆⠄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠒⢭⣹⠛⠉⠉⠉⠀⠒⠢⠄⡀⢀⠀⡀⢀⠀⠄⠤⠐⠚⠀⠀⠀⠠⠐⡃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠠⠅⢀⡀⣀⠤⠤⠤⢴⡲⠬⠤⠤⣤⢄⡦⠤⠤⠤⠆⠦⠀⠄⠠⢼⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀"""

waiting_brain="""⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡦⠤⢦⡤⠦⢦⠀⠀⠀⠀⠀⢀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡇⠀⢸⡇⠀⢸⣠⠞⢟⠚⠲⣄⡟⠓⠳⠻⣦⠞⠛⠓⠲⣄⠀⠀⠀⢼⠒⠛⣶⠓⠛⡦⠺⠛⠓⠢⣰⠛⠒⢲⠛⠚⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠠⡇⠀⠈⠁⠀⢸⡇⠀⠸⡇⠀⢸⡇⠀⢀⣠⡇⠀⠸⠇⠀⢸⠀⠀⠀⠸⡇⠀⢿⠀⢰⡇⠀⢸⠀⠀⢹⠀⠀⢸⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠠⡇⠀⢰⡆⠀⢸⡇⠀⢠⡖⠒⢺⡇⠀⢸⠀⡇⠀⢰⡖⠒⢺⠀⠀⠀⠀⢷⠀⠸⠀⢸⡇⠀⢸⠀⠀⢸⠀⠀⢸⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⡇⠀⢸⡇⠀⢸⢧⡀⠈⠃⠀⡼⡇⠀⢸⠀⢧⡀⠘⢳⢀⣼⡏⢹⡃⠀⣸⡆⠀⠀⡟⣇⠀⠘⠁⣠⠾⡄⠀⠛⠀⠀⣇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠋⠙⠉⠙⠙⠙⠀⠉⠉⠙⠉⠀⠋⠙⠛⠀⠀⠉⠉⠋⠉⢠⣧⠞⠀⠀⢇⣀⡠⠴⠃⠈⠉⠉⠋⠉⠀⠉⠋⠙⠉⠛⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⣀⣏⠉⠉⣇⣀⣀⣀⣄⢀⣤⣀⣀⡀⢠⣄⣀⣀⣤⡀⢠⣄⣀⣀⣀⣀⠀⢀⣀⣀⣀⠀⢀⣤⣀⡏⠉⢹⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠃⠀⣀⠀⠀⣿⠀⠀⠃⢸⠟⠀⣀⠀⠻⡧⠀⠀⣄⠀⠸⡟⠀⠠⣄⠀⢸⡼⠃⢘⡄⠘⢧⡟⠀⢀⡇⠀⢸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⣿⠀⠀⣿⠀⠀⡤⢾⠀⠀⣿⠀⠀⡗⠀⠀⡇⠀⠈⡯⠀⠀⡇⠀⢸⡇⠀⠘⠃⠀⠈⡇⠀⢸⡇⠀⢸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢿⠀⠀⣿⠀⠀⣿⠀⠀⡇⢸⠀⠀⣿⠀⠀⡇⠀⠀⣇⠀⠀⣗⠀⠀⣇⠀⢸⡇⠀⢸⣏⠉⢙⡇⠀⢸⡇⠀⢸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⣄⣀⣁⣀⣀⣿⣀⣀⡇⠘⢦⣀⣉⣀⡴⡗⠀⠠⣁⣀⣸⢻⠀⠠⣑⣀⡸⠹⣄⣈⣙⣀⠜⢧⣀⣈⣁⣀⣸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠁⠀⠀⠁⠀⠈⠈⠁⠀⠀⠈⠈⠁⠀⠛⠒⠒⠃⠈⠀⠛⠒⠒⠃⠉⠀⠀⠀⠀⠁⠀⠀⠀⠈⠀⠈⠈⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣤⣄⣄⠀⠀⢀⣤⣄⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡼⠏⠉⠹⡆⠀⠼⠴⠤⣸⠆⠤⠌⣠⠤⠴⠤⢄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢳⡄⠀⢸⠀⠀⢰⡄⠀⢹⡆⠀⢺⡇⠀⢺⣠⣈⡷⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⡅⠀⢸⠀⠀⢸⠆⠀⢸⠄⠀⢌⢳⣀⡀⠉⠓⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣠⣴⣾⣿⣿⣿⣿⣿⣶⣶⣤⣄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⡄⠀⠸⠀⠀⢸⠃⠀⢸⠂⠀⠸⡇⠈⢹⠀⠀⣟⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣦⣄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠛⠒⠒⠒⠒⠚⠓⠒⠚⠒⠒⠂⠙⠒⠒⠒⠚⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⣠⣤⣶⣶⣶⣶⣶⣶⣶⣶⣾⣿⣿⣿⣿⣿⣿⣿⠟⠛⠻⢿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣠⣴⣶⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣟⠉⠁⠀⠀⠀⠀⠈⠙⠻⢿⣿⣿⣿⣿⣿⣿⣿⣦⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣴⣿⣿⣿⣿⣿⣿⣿⣿⣿⠿⠿⠿⠿⠿⠿⠿⢿⣿⣿⣿⠿⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⠻⣿⣿⣿⣿⣿⣿⣿⣦⡀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣶⣿⣿⣿⣿⣿⣿⣿⠿⠋⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣿⣿⣿⣿⣿⣿⣿⣆⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣴⣿⣿⣿⣿⣿⣿⣿⠟⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢿⣿⣿⣿⣿⣿⣿⣆⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣴⣿⣿⣿⣿⣿⣿⣿⠟⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣿⣿⣿⣿⣿⣿⣿⡄⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⣿⣿⣿⣿⣿⣿⣿⡟⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣿⣿⣿⣿⣿⣿⣿⡀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣴⣿⣿⣿⣿⣿⣿⡿⠃⢀⣴⣶⣶⣶⣤⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣤⣶⣶⣶⣤⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢹⣿⣿⣿⣿⣿⣿⣧⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣾⣿⣿⣿⣿⣿⣿⡟⠁⠀⢿⣿⣿⣿⣿⣿⡿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⣿⣿⣿⣿⡷⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢿⣿⣿⣿⣿⣿⣿⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣾⣿⣿⣿⣿⣿⣿⡟⠁⠀⠀⠈⠻⠿⠿⠿⠟⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⠻⠿⢿⠿⠟⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣿⣿⣿⡆⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣾⣿⣿⣿⣿⣿⣿⠏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⣿⣿⣿⣿⣿⣿⣿⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣿⣿⣿⡿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢿⣿⣿⣿⣿⣿⣿⡇⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣸⣿⣿⣿⣿⣿⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣿⣿⣿⡿⠅
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣼⣿⣿⣿⣿⣿⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣸⣿⣿⣿⣿⣿⣿⡇⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢾⣿⣿⣿⣿⣿⣿⡇⠀⠀⠀⠀⠀⠀⠀⢀⣴⣶⣶⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⣿⣿⣿⣿⣿⡇⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣻⣿⣿⣿⣿⣿⣿⡇⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣿⣷⣄⠀⠀⠀⠀⠀⠀⠀⢀⣤⣴⣾⣿⣿⣷⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣿⣿⣿⣿⣿⣿⣿⠇⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢾⣿⣿⣿⣿⣿⣿⡅⠀⠀⠀⠀⠀⠀⠀⠀⠻⣿⣿⣿⣿⣿⣿⣶⣤⣤⣤⣶⣶⣿⣿⣿⣿⣿⣿⡿⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣸⣿⣿⣿⣿⣿⣿⡏⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣿⣿⣿⣇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠛⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠛⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⣿⣿⣿⣿⣿⣿⡿⠁⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⣿⣿⣿⣿⣿⣿⣿⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠙⠻⠿⠿⠿⠿⠟⠛⠛⠋⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⣿⣿⣿⣿⣿⣿⣿⠁⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣿⣿⣿⣿⣿⣿⣿⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣴⣿⣿⣿⣿⣿⣿⣿⠁⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢻⣿⣿⣿⣿⣿⣿⣷⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣠⣴⣿⣿⣿⣿⣿⣿⣿⠟⠁⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⣿⣿⣿⣿⣿⣿⣿⣷⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣠⣴⣶⣿⣿⣿⣿⣿⣿⣿⣿⣿⠟⠁⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡤⠤⣤⣾⡋⠛⢿⣗⣒⣒⣚⣯⡖⢲⣤⣤⣤⣢⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠹⣿⣿⣿⣿⣿⣿⣿⣿⣶⣦⣄⣀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣀⣤⣴⣶⣶⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠿⠋⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⡄⣾⠛⠛⠻⣶⠄⠈⣿⣇⠀⠉⠉⢻⡉⣤⣄⣘⣡⠤⠥⣄⣉⣙⠓⣦⢄⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⠻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣷⣷⣶⣶⣶⣶⣷⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠿⠛⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⣀⣴⣏⠹⡿⠉⢠⣷⣶⠃⠰⡧⠉⠉⠓⠶⣤⣀⣱⣬⣽⡁⡀⠰⣇⠈⢩⣉⠓⢾⣄⣽⢳⣤⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠛⠿⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠿⠿⠛⠛⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⢀⣴⢿⠁⠲⣿⡿⢛⡁⠩⠉⠙⢓⡶⠾⣷⠗⠂⠈⣿⡉⠉⠉⣙⠃⢘⣿⠀⠀⣻⠀⣶⢿⣁⣴⠶⣭⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠉⠉⠉⠛⠛⢻⣿⣿⣿⣿⣿⣿⡿⠿⠛⠛⠛⠛⠋⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⣀⣾⣣⣦⠼⢤⠏⡀⠉⣿⠓⢤⡀⢀⡈⢦⠙⢧⡀⠛⠿⢿⣆⣄⠈⠛⢿⣯⣴⡿⠟⠁⢀⣠⣈⣷⣦⣶⣟⣿⣆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣿⣿⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⣾⢻⠋⣶⣶⢠⣼⢣⣽⠀⣿⢰⡌⠉⢻⣧⢰⣦⠘⣿⡗⠒⠒⠊⢻⡇⣾⡇⢸⡏⢠⢲⣽⣿⣿⣿⣿⣭⣴⣾⡍⢹⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⣿⣿⣿⣿⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⣸⢣⡇⣶⢇⣩⣧⢬⢛⣧⢇⣼⡟⣿⣥⢺⣿⡿⣛⣰⣿⣴⣶⠲⣶⡌⣿⡟⠁⣸⣿⣷⣄⡉⡐⢶⡶⢹⠋⣳⣼⠿⣯⣧⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣿⣿⣿⡟⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⣰⢿⢻⣷⢛⢺⣷⣙⡻⢋⡥⢛⣾⣷⣜⠻⠛⢻⣷⣯⣍⣷⣾⣟⣿⢶⣿⣿⣇⣸⣏⣿⣿⣿⣿⣽⣿⣦⣾⢇⡛⣽⢶⣽⢾⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣿⣿⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⢠⣯⣽⣼⣏⢮⣽⣿⣷⣝⣻⣾⡵⢻⣿⣼⢯⣿⡖⡊⠿⢿⣭⡙⠻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣋⣩⣽⣿⣮⣿⣻⣾⣿⣿⣿⣿⣆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣾⣿⣿⣿⣿⣿⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠈⣧⠂⣿⡌⢷⡾⣿⠼⣿⢯⡳⣿⠷⣟⢿⣿⣧⣻⢷⣶⢲⣶⢻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢧⡿⢩⣿⣟⣽⣯⣿⣿⣿⣿⣿⣦⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣿⣿⣿⡿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠈⢿⡛⣛⠻⣎⡹⡽⢿⣟⣿⢷⡿⢾⡿⣾⣿⣭⡻⢭⣛⢿⣻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣯⣷⣿⣿⣽⠮⢿⣿⣿⣿⣿⣿⣿⣿⣷⣤⣤⣤⣤⣤⣤⣤⣤⣤⣤⣤⣤⣄⣼⣿⣿⣿⣿⣿⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠘⢿⡿⢧⣽⣙⣿⢻⡾⣏⠎⡿⣧⣿⣵⣯⣛⣿⣻⣾⡛⡟⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡀⠉⠉⠀⠀⠀⠘⠿⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠉⠓⠺⣍⣣⣣⣻⣽⣻⣼⣵⣮⣝⡹⣫⣽⣧⣗⣯⣽⣻⣽⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣄⠀⠀⠀⠀⠀⠀⠀⠹⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠙⣿⡿⣽⣿⣻⡿⣿⣿⣿⣿⣷⣿⣷⠟⠓⠛⢯⣿⣿⣿⣿⣿⣟⣿⣿⣿⣿⣿⣿⣿⣿⣷⣦⡀⠀⠀⠀⠀⠀⠈⠙⠿⠿⠿⠿⠿⠿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠉⠛⠚⠿⠿⢿⣿⣿⡿⠿⡿⠛⠀⠀⠀⠀⠀⠉⠙⠛⠛⠛⠉⠉⢿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣤⣄⣀⣀⣀⣀⣀⣀⣀⣤⣶⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣟⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀"""

waiting_shreck="""⣿⣿⣿⣿⣿⣿⣿⣿⣿⣧⣼⣧⣴⣷⣞⠛⢷⡿⠓⠶⣿⣿⣦⣄⢀⣤⣤⣭⠉⠁⡀⣼⢿⣟⣓⢠⡀⠀⢸⣇⠀⠀⠀⢀⡀⢸⠞⠋⠀⠀⠀⠀⠀⠀⠁⠈⠀⣙⣻⣿⣿⣿⣿⣿⣿
⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡏⢠⣶⡟⠀⣠⡀⠀⠀⠋⠻⢷⣄⠁⣈⣠⣶⠶⠛⠛⠉⠉⠉⠉⠛⠳⢦⣄⡈⠙⠂⠲⠀⠀⠀⠀⠀⠀⢰⡖⢀⣴⣿⣿⣿⣿⣿⣿⣿⣿
⡏⠉⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣍⣹⣿⣿⣿⣆⣼⣇⠀⠀⢀⣼⠿⠋⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠛⢷⣄⠀⠀⣄⠀⣀⢀⣠⣴⡟⠉⠉⢀⠈⢹⣿⣿⣿⣿⣿
⣛⢢⣴⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠁⠀⣀⣴⠟⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠻⣆⢠⣤⣤⣽⣟⠛⠿⠿⢿⠆⠀⢤⡈⢻⣿⣿⣿⣿
⣿⣿⡟⠻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⣷⠟⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢉⣿⠟⣍⠉⠻⣿⣿⣶⣾⣿⣷⣿⣿⣦⣽⣻⣿⣿
⣿⣯⡀⢤⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⠏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⡟⢸⡟⣆⠀⠘⣿⣿⣿⣿⣿⡿⢿⣿⣿⣿⣿⣿
⣿⣿⣷⣾⣼⣿⣿⣿⣿⣿⣿⣿⣿⣿⠋⢻⣿⣿⣿⠀⢙⣿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⡇⠸⣇⣿⠀⠀⣹⣿⣿⣿⣿⣶⣶⣾⣿⣼⣿⣿
⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠀⠀⠉⠛⣿⡿⠏⠀⠀⠀⠀⠀⠀⠀⠀⢀⡀⠀⠀⠀⠀⠀⠀⢀⡂⠀⠀⠀⠀⠀⠀⠰⠟⠁⢶⣬⣍⣤⣶⠿⣿⣿⡿⣿⣿⣿⢿⣿⢿⣿⣿
⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢿⡀⠀⣠⣞⡉⠀⠀⠀⠀⠀⠀⣀⣤⣾⣿⣿⣿⣿⣦⡀⠀⠀⠀⠀⠹⣦⡀⠀⠀⠀⠀⠀⠀⣴⡿⠋⠉⠈⠁⣀⣾⣿⡃⢉⡙⠻⡿⣿⠸⣿⣿
⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣴⣿⠟⠻⣦⠀⠀⠀⠀⢰⡿⠟⠁⠀⠀⠈⠙⠛⠻⣦⡀⠀⠀⠀⠈⣿⣷⡀⠀⠀⠀⣾⠛⠷⠀⠀⠀⠀⠉⠉⠉⠀⠈⠀⠀⢐⠀⠀⣿⣿
⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠟⣻⣿⣿⠀⠀⠈⢷⡀⠀⠀⢸⡗⠀⠀⠀⠀⠀⠀⠀⠀⠈⠙⠂⠀⠀⠀⣼⣿⠃⠀⠀⠀⠁⠀⠀⠀⠀⠀⠀⠘⠓⠀⠀⢀⣤⡒⣴⡖⠀⣿⣿
⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢿⣿⣴⣿⣿⣿⡄⠀⠀⠀⣷⡀⠀⠸⣧⠀⠸⡆⠀⠀⠀⠀⠀⠀⠀⣀⣠⡾⠛⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠾⣿⣷⡿⢠⣿⣿⣿
⣿⣿⣿⣿⣯⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣤⣀⣀⣈⣳⠀⠀⢻⡄⣠⣷⣶⡟⢛⠛⢳⣶⣾⢻⠏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠠⣤⣶⣿⣿⣿⣿
⣿⣿⣿⣿⣼⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⡇⠀⣌⣿⠃⠀⠀⠀⠻⣿⣝⡃⠼⣾⠾⠃⣠⠟⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⢿⣿⣿⣿
⣇⣻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠃⠷⢼⣿⠏⠀⠀⠀⠀⠀⠀⠉⠉⠩⠥⠖⠛⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⢿⣿
⣿⣿⣿⣿⣿⡻⢿⣽⣿⣿⣿⣿⣿⣿⣿⣿⣿⡏⠀⠀⠉⠀⠀⠀⠀⠀⠀⠀⠀⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙
⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢻⣶⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣴
⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠿⣿⡆⠀⠀⠀⠀⠀⠀⣠⣤⣤⣴⣟⢿⣷⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣾⣿⣿
⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣁⢠⣿⡄⠀⠀⢤⣠⠊⠿⣿⣿⣿⣿⠿⠛⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿
⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠃⣿⠷⢟⣾⡛⣿⣆⠀⠀⠙⠳⠶⠿⠛⠋⠁⠀⠀⠀⠀⠒⢦⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣿⣿⣿⣿
⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠁⠀⣿⢀⣿⣿⣷⠹⣿⣧⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠙⢦⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣿⣿⣿⡿⢿
⣿⣶⣿⣿⣿⣿⣿⣿⣿⣿⣿⠃⠀⢠⣿⢸⣿⢹⣿⡇⢻⣟⣆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⢧⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣿⡿⢿⡿⣿⣿
⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⠀⠀⢸⠟⣷⣿⣪⣻⣇⢺⣿⢻⣆⠠⢄⡀⠠⠤⠤⠶⠶⠛⠛⠛⠛⠛⠛⠂⠀⠀⢿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢼⣿⠣⢺⣿⣿⣿
⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠀⠀⠀⢸⣿⣿⣟⣿⠘⠻⠸⣿⣽⣿⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣴⡿⠀⢠⣾⣿⡇⣸
⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠀⠀⠀⢸⣧⣿⢿⣷⡉⠀⠸⣿⣿⡈⣷⡀⠀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⣿⢋⣤⣶⣾⣿⠉⣿⣿
⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠀⠀⠀⠈⣿⡿⣾⣿⣧⠀⢰⣿⣿⣿⢹⣿⡄⠀⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣰⡿⢇⣴⣿⣿⣟⢿⣿⠿⣿
⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡀⠀⠀⠀⠹⣇⣿⠙⣿⣥⣿⣹⣿⣿⣟⣙⣿⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡤⠀⠀⠀⠀⠀⣀⣤⡶⢋⡵⣣⣾⣿⣿⢿⣿⣿⡏⠀⣿
⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⠀⠀⠀⠀⢿⡎⠻⢿⣟⢹⣿⣷⣿⣿⠟⢿⣧⠘⢦⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⡤⠚⠋⠀⠀⠀⠀⣠⡼⣿⣛⠒⢋⣴⣿⣿⣿⣿⣿⣿⣿⡄⣛⣿
⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡀⠀⠀⠀⠘⣷⣾⣿⣿⣿⣿⣿⣿⠻⣿⣏⠙⣧⠀⠈⠳⣖⣶⣤⣤⣤⣶⣶⣟⣫⣒⡈⢠⣤⣤⣾⣟⣻⠗⠋⣀⣶⣿⣿⣿⣿⣿⣯⣿⣿⣿⣿⣿⣿
⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣇⠀⠀⠀⠀⣿⣝⣿⣿⣿⣿⣿⣋⣷⣿⣿⣧⡌⢷⣄⠀⠈⠙⢥⣤⣍⣻⡟⡛⢻⠛⢛⢻⣿⣑⠇⠉⣉⣴⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣾
⣿⣿⣿⡿⢿⡿⣿⣿⣿⣿⣿⣿⠀⠀⠀⠀⢿⣿⣏⣿⣿⣿⣿⣿⢿⣿⣿⣿⢿⣦⡨⣷⣆⡀⠀⠀⠂⠀⠈⠓⠾⠉⠟⠛⠀⣀⣴⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢿⣿
⣀⠀⠀⠀⠛⠛⠛⠛⠛⠛⣻⣟⣧⠀⠀⠀⢸⣟⣿⣾⢿⣧⣿⣿⣆⣿⡿⣿⣼⣿⣿⣿⣎⣻⣦⣀⠀⠀⠀⠀⠀⠀⠀⢀⣼⣿⣿⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿
⠀⠀⠀⠀⠀⠀⠤⡤⠤⠤⠤⣤⣼⠀⠀⠀⠈⣿⣟⣿⣿⣿⡻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣦⣄⣤⣤⣤⣶⣿⣿⣿⣿⣿⣿⡟⢻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿"""

yes_meme="""\n              ⣀⣤⠶⠖⠿⠉⠈⠉⠉⠉⠛⠩⠛⠛⠛⠶⠶⠦⣤⣀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⡴⠞⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢉⠛⢦⡀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⣠⠞⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢈⢟⣦⡀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⣴⠟⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠣⠈⡻⣄⠀⠀⠀⠀
⠀⠀⠀⠀⢀⠞⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⢿⣆⠀⠀⠀
⠀⠀⠀⢠⠏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡄⠀⠀⠀⠀⠀⠀⠈⣿⡄⠀⠀
⠀⠀⢠⡏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠱⠀⠀⠀⠀⠀⠀⠀⠸⣷⠀⠀
⠀⠀⡟⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⡇⠀⠀⠀⠀⠀⠀⢠⣠⣦⣴⣶⣄⢀⠀⠀⠀⠀⠀⠀⢀⣹⡄⠀
⠀⢸⠅⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⣧⡆⠀⠀⠀⢀⣼⣿⣿⣿⣿⡿⣿⣿⡄⠀⢀⣠⣾⣿⣿⣿⡇⠀
⠀⡞⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠹⣿⡄⠀⠀⠛⠹⢿⣿⣿⡿⠃⠈⢙⠀⣀⠸⡿⣿⣿⣿⣿⣧⠀
⢰⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠻⣧⠀⠀⠀⠀⠘⠿⠿⠁⠀⠰⠛⠀⣾⡇⣿⠘⢿⡛⠁⢹⡇
⢸⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⡀⠀⠀⠁⠰⠶⠖⠀⠀⠀⠀⠀⢹⣿⢹⡀⠀⠀⠀⣼⡇
⢸⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣧⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣸⠸⡜⡇⠀⠀⢰⣿⠁
⢸⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠀⡏⠀⠙⢹⡀⠀⣾⡏⡀
⠸⣧⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠹⠀⠀⠀⠀⠀⠀⠀⠂⢀⣼⢃⡁⢤⡀⠈⣿⢠⣿⠁⠀
⠀⢿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣿⣿⣿⣶⣶⠾⠛⣸⡟⠀⠀
⠀⢸⣇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢺⣿⣿⣿⠟⠀⠀⢰⣿⢃⠀⠀
⠀⠀⣿⡂⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⡀⠀⠀⠀⢀⣀⣀⣈⣹⣏⣁⣠⣤⣤⣾⡟⠀⠀⠀
⠀⠀⠸⣷⠀⠀⠀⠀⠀⠀⠀⠀⢠⣶⣶⣶⣦⣤⣀⠀⠀⠀⠀⠀⠀⠸⣧⠀⠀⠀⠈⠛⢿⣿⣷⣶⣶⡿⠛⣹⣿⠃⠀⠀⠀
⠀⠀⠀⢻⡄⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣿⣿⣿⣿⣦⡀⠀⠀⠀⠀⠘⣧⠀⠀⠀⠀⠀⠉⠛⠋⠁⠀⢠⣿⠃⠀⠀⠀⠀
⠀⠀⠀⠘⣷⠀⠀⠀⠀⠀⠀⠀⠈⣿⣿⣿⣿⣿⣿⣿⣿⣷⣶⣦⡀⠀⠀⠻⢇⡀⠀⠀⠀⠀⠀⠀⠀⢀⣿⠃⠀⠀⠀⠀⠀
⠀⠀⠀⠀⢿⡇⠀⠀⠀⠀⠀⠀⠀⠙⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣤⣀⠈⠃⡀⠀⠀⠀⠀⢀⠀⣼⠃⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠘⣧⠀⠀⠀⠀⠀⠀⠀⠀⠈⠄⠀⠀⠘⠿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣤⣁⠀⠐⠀⢀⣼⣧⡟⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⣿⠂⠀⠀⠀⠀⠀⠀⠀⠀⠂⠀⠀⠀⠀⠈⠻⢿⣿⣿⣿⣿⣿⣿⣿⠿⠿⣶⡿⠿⠿⠋⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠉⣿⣿⣿⣿⡟⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⣿⣿⠀⠀⠀⠀⠳⡀⠀⢀⡔⠁⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⠟⣿⠀⠀⠀⠀⠀⠈⣖⠁⢀⡤⡄⠀⠀⡖⠠⠀
⠀⠀⠀⠀⠀⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⠏⢀⣿⠀⠀⠀⠀⠀⠀⠆⠀⢼⠤⠇⠀⠀⢣⡀⠀
⠀⠀⠀⠀⢰⡟⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⡿⠃⠀⠐⢿⡀⠀⠀⠀⠀⠀⣇⠀⠈⠒⠂⢂⣀⣀⠇⠀
⠀⠀⠀⠀⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣼⡿⠁⠀⠀⠀⠘⣧⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⢸⣿⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⡿⠟⠁⠀⠀⠀⠀⠀⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠿⣿⣤⣀⣀⢀⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠁⠀⠀⠀⠀⠀⠀⡀⣼⡟⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⣀⡈⢛⠻⠿⢿⣿⣿⣿⣿⣿⣿⣿⣿⣶⣶⣶⣶⣶⣶⣶⡾⠿⠟⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀"""

waiting_monster="""⣻⡿⢏⢥⡻⢬⡍⢳⡘⢦⢣⢝⡢⡓⡜⠰⢂⠐⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⡿⢏⡜⣲⡙⢦⡙⢧⡙⣎⠞⢦⠡⢁⠈⠀⠀⠄⠀⢈⠀⠈⢀⠈⠀⠈⠐⠈⠀⠁⡀⠁⠈⠀⠄⠁⠀⢁⠂⠄⠀⢀⠀⠀⠉⠲⣄⡀⠹⣧
⡱⣩⢚⡥⣙⢦⡙⣦⡙⢦⡛⣬⢓⡆⣴⣤⣦⣴⣬⣦⣴⣤⣆⣤⣈⡀⠐⢀⣈⣴⣴⣶⣶⣶⣦⣤⣌⡀⠀⠠⠀⠠⠀⠈⠀⠄⡈⠧⣀⠈
⣱⢣⢏⡖⣭⢒⡝⢦⣝⢣⠞⣴⣿⠿⣛⣿⣿⣿⣦⡄⠉⠉⠙⢻⣿⣿⣿⣿⠟⠋⠉⣨⣿⣿⣿⣏⠛⠿⣿⣶⣄⠀⠠⠁⠀⠄⡀⠀⠹⡄
⢎⡳⢎⡜⢦⢫⢜⡣⢎⢧⣛⣿⠋⡀⢾⣿⣿⣿⣿⣿⣶⠀⠀⢀⣼⡿⢿⣾⠗⠀⣾⣿⣿⣿⣿⣿⣧⡀⠈⠛⣿⡧⠀⠀⠁⠐⡀⢁⠂⢜
⡹⣜⢣⢞⡱⢎⢮⡱⣋⢦⡹⣿⣷⣈⠻⣿⣿⣿⣿⣿⠟⠀⢠⣿⣿⠀⡍⢿⣿⡄⠹⣿⣿⣿⣿⣿⡟⠋⠀⣰⣿⠗⠀⢈⠀⡐⠠⠀⠌⠰
⠳⣌⢳⢪⡕⣎⠶⡱⣍⠶⡱⢻⣿⣧⣳⡰⠩⠿⠟⡁⢀⣠⣾⡿⡁⢆⠈⢆⡹⣿⣄⣩⠍⡛⠟⠉⠀⣀⣴⣿⠋⠀⡐⠀⠂⠀⠄⠡⠘⡠
⡹⡌⢧⠳⡜⡜⢮⡱⢎⡳⣍⢣⠞⡽⢻⣿⣷⣷⢶⣶⣾⣿⡿⣵⢏⡶⣍⠶⣰⢹⣿⡙⢻⢷⣶⣶⡿⢿⠛⠁⢀⠠⢀⠠⠁⡈⠄⡁⠂⠁
⡱⢎⢇⡻⣌⢳⢃⡞⡥⢳⢜⡣⡝⡼⣡⠂⣽⣿⣿⣿⣿⣿⣿⣽⣞⣳⣭⢳⣣⢿⣿⣿⣶⡆⠀⠀⠀⣀⠠⢀⠂⠀⠂⠀⠀⡐⠀⠄⠠⠁
⡱⢎⢮⡱⢎⡣⢏⡲⣙⢬⡚⡴⣹⢒⠡⣼⣿⣿⣿⣿⣿⣿⣿⣿⡽⣟⣿⣿⣿⣿⣮⣟⣽⣿⣶⣀⠀⠀⠈⠀⠀⠐⠀⠀⠀⠄⡁⢈⠀⠄
⡱⣋⠶⣱⢋⠶⣩⠖⣭⢢⢓⡱⢎⠢⣽⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣟⣿⣿⢮⣿⣽⣾⣷⣿⣿⣿⡆⠀⠀⠀⠈⠀⠀⠀⠀⠒⣀⠂⡀⢀
⡱⢣⡝⢦⣋⠞⣥⠺⣔⢣⡙⢦⢃⡱⢛⢿⡟⣿⡿⣿⠿⣿⣿⣿⣿⣾⣿⣿⡿⣿⢿⣿⣿⣿⡿⠟⠁⠀⠀⠀⠀⠀⠀⢀⠠⠁⠄⢂⠐⠠
⡱⢣⢎⡳⣌⢏⠶⣩⠖⣣⡙⢆⡇⢆⡉⢂⠉⠐⠡⠉⠊⡙⠿⣿⣿⡟⡿⠏⠓⠉⠋⠉⠋⠀⠀⠀⠀⠀⠀⢀⠀⠀⠀⠀⠠⠀⠂⠄⣈⠐
⡱⣃⢮⠱⣎⠺⡜⣥⢛⡤⣙⠶⣘⢢⡑⢢⠈⠄⠐⡀⠄⠀⠁⠐⠀⢈⠀⡁⢀⠠⠄⠀⢀⠀⠀⠀⠀⠐⠀⠀⠀⠀⠀⠀⠄⠂⡈⠐⠠⢈
⡱⡜⣢⢛⡴⢫⡜⢦⡍⢶⣉⠶⡑⢦⡉⠆⡌⡐⠀⡐⠈⡐⠈⠄⡈⠄⡀⠐⡀⢀⠀⠁⠀⢀⠀⠁⠀⠀⡀⠀⠀⠁⠀⢀⠀⠄⠠⢁⠂⠄
⡱⢥⢣⡍⣖⢣⠞⡱⢎⠧⡜⢎⡙⢦⡉⠖⡰⢀⠁⠠⠀⠄⡐⢀⠠⠀⡀⠁⡀⠄⠈⠐⡀⠀⠀⢀⠀⠀⠀⠀⠠⠀⠈⠄⠠⢀⠱⠀⡌⠐
⢧⢋⠖⣱⢪⠱⣎⠵⣫⠜⣜⢣⡝⣢⠙⣆⠱⠀⠌⡀⠂⠄⡀⠄⠀⠂⢀⠁⠀⡐⠈⠀⠄⠐⠈⠀⠀⠈⠀⠀⠀⠄⠡⠈⠄⢂⠄⡃⠤⢁
⢧⣋⠞⡥⢎⠳⣌⠳⢬⡙⣤⠳⡸⢄⠫⣄⠣⢉⡐⠠⠁⠠⢀⠂⠁⢂⠀⠌⠀⠄⠠⢁⠠⠈⠀⠄⡐⠀⠈⠀⠄⠈⠄⠡⣈⠢⡘⢠⠒⠠
⣧⢻⡜⣱⢋⠶⣌⡹⣂⠗⡢⢝⡰⢋⡱⢄⠃⢆⠰⠁⠠⠁⢂⠐⠨⡀⢂⠄⠡⠈⡀⢂⠠⢈⠐⠀⠀⢁⠊⡐⡈⠌⡐⠡⣀⠑⡌⢂⠡⢃
⣭⢳⣭⢣⢏⡞⡴⢣⡕⣫⢱⣊⡔⢣⢰⡈⣔⣨⡐⣌⢠⠐⡀⠌⡀⠡⠀⠂⠄⠁⠀⢀⠠⠀⠀⠁⠈⠀⠀⠁⠌⠢⢅⠣⢄⠣⡘⡌⡑⢢
⣯⣗⣮⣛⣮⣽⡹⣧⢻⣜⣧⡟⡾⣏⢷⡻⡜⢧⡛⠾⡹⢏⠿⣳⠯⣷⢳⣳⢎⣶⢣⣖⡦⣖⢦⡌⡔⣈⡐⢀⠀⡐⠈⢘⢢⢣⠱⣌⠱⣂
⣟⣮⢷⣻⣞⣷⣻⣽⣻⣞⣶⣝⢦⣉⢦⡑⣌⢂⠌⡐⠡⢈⠂⡅⡘⢀⠃⠌⠊⠔⡉⠌⠃⠍⠂⡙⠘⠠⢉⠃⠎⡐⢈⡤⣓⢎⡳⣌⠳⣌
⣿⡽⣯⣷⢿⣞⣯⣷⡿⣯⣿⡾⣿⣽⡾⣽⢾⡽⣮⣵⢻⣬⢳⡜⣜⣣⠻⣜⡛⢶⡱⢎⡖⣦⡱⣤⢲⡰⣆⣜⣲⣜⡳⣞⡭⡞⡵⣎⡟⡼
⣿⣿⢯⣿⣻⣯⣿⢷⣿⣟⣷⡿⣟⣾⣟⣿⢯⣿⣳⣯⣟⡾⣧⣟⡾⣖⣟⣶⣹⢧⣛⣮⡽⡶⣝⣮⠷⣝⣮⡽⢶⡭⣷⡹⣞⡽⣳⡝⣾⡹
⣿⣻⡿⣯⣿⣻⣽⣿⣳⡿⣯⣿⣟⣿⢾⣻⡿⣽⣯⣷⣿⣻⣽⣯⣿⣽⣾⣳⣯⣿⣽⣾⣽⣻⣽⣞⡿⣽⡾⣽⢯⣟⣶⣻⡵⣏⡷⣹⠶⣽"""









import json

def cria_tarefa() -> None:

    """
    Solicita ao usuário o título e a descrição da tarefa,
    e adiciona a nova tarefa ao arquivo de memória.
    """
    
    titulo = input("Escreva o título da tarefa: ")
    descricao = input("Escreva a descrição da tarefa: ")

    # Abre o arquivo em modo append
    with open("memoria.txt", "a") as f:
        # Serializa os dados (título e descrição) em formato JSON e escreve no arquivo
        json.dump({"titulo": titulo, "descricao": descricao}, f)
        # Adiciona um \n para separar as entradas
        f.write("\n")

def get_tarefas() -> list:

    """
    Lê todas as tarefas do arquivo de memória e retorna uma lista de tarefas.

    :return: Lista de dicionários correspondentes às tarefas escritas no arquivo de memoria
    :rtype: list
    """
    tarefas = []  # Inicializa uma lista vazia para armazenar as tarefas lidas
    # Abre o arquivo em modo de leitura
    with open("memoria.txt", "r") as m:
        # Lê cada linha do arquivo
        for linha in m:
            # Verifica se a linha não está vazia antes de tentar desserializar
            if linha.strip():
                try:
                    # Desserializa os dados (converte a string JSON de volta para um dicionário)
                    tarefa = json.loads(linha)
                    # Adiciona a tarefa à lista de tarefas
                    tarefas.append(tarefa)
                except json.JSONDecodeError as e:
                    print(f"Erro ao decodificar JSON na linha: {linha.strip()}")
                    print(f"Erro: {e}")
    # Retorna a lista de tarefas para uso posterior
    return tarefas





def main_menu_para_str() -> str:

    """
    Função devolve a string que representa gráficamente o menu inical do programa.

    :return: Representação gráfica do menu inicial do programa
    :rtype: str
    """
    arte_nerd = """
                    _       
 _ _   ___  _ _  __| |      
| ' \ / -_)| '_|/ _` |      
|_||_|\___||_|  \__/_|      
    """

    linhas_nerd = arte_nerd.splitlines()

    build = "\n" + "\n".join(linha.ljust(40) for linha in linhas_nerd) + "\n \n"
    build += "  (N) Nova Tarefa\n"
    build += "  (E) Editar Tarefa\n"
    build += "  (R) Ler Tarefas\n"
    build += "  (D) Apagar tarefas\n\n"
    build += "  (Q) Sair\n"
    return build


def run() -> None:

    """
    Função principal que gere o fluxo do programa
    :return: None
    :rtype: None
    """
    
    I = ""
    
    dumb_memes=[waiting_brain,waiting_emogi,waiting_monster]
    dumb_meme=0    

    def main_menu():

        """
        Função para exibir o menu principal e obter a escolha do usuário

        :return: None
        :rtype: None
        """
        nonlocal I
        nonlocal dumb_meme

        #enquanto o input não for desejado, o main menu continua a pedir inputs
        while I not in ("N", "E", "R", "D", "Q"):
            #ciclo de memes
            if I != "":
                if dumb_meme<2:
                    dumb_meme+=1
                else:
                    dumb_meme=0
                print(dumb_memes[dumb_meme])
                
            print(main_menu_para_str())
            I = input("Escolha uma opção: ").upper()

    def edit_menu() -> None:

        """
        Função que gere o menu de edição de tarefas
        :return: None
        :rtype: None
        """

        all_tasks=ler_tarefas()
        try:
            size=len(all_tasks)
        except TypeError:
            return
        
        E = ""
        valid_n = [str(x + 1) for x in range(size)]

        while E not in valid_n + ["Q", "q"]:
            E = input("\nIndique o # da tarefa que quer editar: ")

        if E in ("Q","q"):
            return

        index = int(E) - 1  # Converte a escolha do utilizador para um índice de lista

        t = ""
        while t not in ("S", "N"):
            t = input("\n(S/N) Editar título? ").upper()
        if t == "S":
            novo_titulo = input("Novo título: ")
            all_tasks[index]["titulo"] = novo_titulo

        d = ""
        while d not in ("S", "N"):
            d = input("\n(S/N) Editar descrição? ").upper()
        if d == "S":
            nova_descricao = input("Nova descrição: ")
            all_tasks[index]["descricao"] = nova_descricao

        # Atualiza o arquivo com as novas tarefas
        with open("memoria.txt", "w") as m:
            for i, tarefa in enumerate(all_tasks):
                if i == index:
                    # Se for a tarefa editada, escreve a versão editada
                    json.dump(tarefa, m)
                else:
                    # Se não for a tarefa editada, escreven a tarefa existente
                    json.dump(tarefa, m)
                m.write("\n")
        print("",yes_meme)
        print("\n\nTarefa editada\n")

    def delete_menu():
        """
        Função que gere o processo de apagar tarefas, pedindo inputs ao utilizador
        :return: None
        :rtype: None
        """

        def delete_data():

            """
            Limpa o ficheiro de memória, ficando vazio
            :return: None
            :rtype: None
            """
            with open("memoria.txt","w"):
                pass

        d=""
        print("\n\n(T) Apagar tarefa\n(A) Apagar tudo\n\n(Q) Voltar")

        #enquanto o input não for o desejado, o ciclo continua a pedir inputs ao utilizador
        while d not in ("A", "T", "Q"):
            d = input("\nEscolha uma opção: ").upper()
        
        #sair da função e regressar à função run()
        if d in ("Q","q"):
            return

        #apaga todas as tarefas
        if d == "A":
            print(skull_meme)
            delete_data()

        #mantém todas as tarefas na memoria exceto a que se deseja apagar
        else:
            all_tasks=ler_tarefas()
            size=len(all_tasks)
            valid_n = [str(x + 1) for x in range(size)]
            while d not in valid_n + ["Q", "q"]:
                d = input("\nIndique o # da tarefa que quer apagar: ")

            if d in ("Q","q"):
                return
            index = int(d) - 1  # Converte a escolha do utilizador para um índice de lista

            #overwrite no ficheiro de memoria
            with open("memoria.txt", "w") as m:
                for i, tarefa in enumerate(all_tasks):
                    if i == index:
                        # Se for a tarefa editada, escreve a versão editada
                        continue
                    else:
                        # Se não for a tarefa editada, escreven a tarefa existente
                        json.dump(tarefa, m)
                    m.write("\n")

            print("\n\n\n",star_meme)
            print("\nTarefa apagada\n")




    def ler_tarefas() -> list:

        """
        Função que dá a interface de vários menus neste programa,\n
        e retorna a lista gerada pela função get_tarefas().\n\n

        Esta função tem em atenção a variável não-local da função run, que\n
        dita como o output da consola deve ser contruido dependendo do menu que se deseja.\n

        :return: tarefas
        :rtype: list
        """
        tarefas=get_tarefas()
        size=len(tarefas)
        nonlocal I

        #Verificar se o ficherio memoria.txt está vazio
        if size==0:
            return(print(waiting_shreck,"\n\nNão existem tarefas para ler..."))

        #output desejado para os menus de edição e de apagar tarefas
        elif I=="E" or I=="D":
                for i in range(size):
                    print(f"\n#{i+1}\n Título: {tarefas[i]['titulo']}")
                    print(f" Descrição: {tarefas[i]['descricao']}")
                print("\n(Q) Voltar")

        #output desejado para a opção de apenas ler as tarefas
        else:
            for i in range(size):    
                print(f"\n{tarefas[i]['titulo']}")
                print(f"    {tarefas[i]['descricao']}")

        return tarefas


    # O objetivo do loop é fazer com que o programa só acabe quando o utilizador escolher (Q)Sair
    while I!= "Q":

        # Reset na variável de input e inicialização do main_menu
        I=""

        main_menu()

        if I=="D":
            delete_menu()

        elif I == "R":
            print("")
            ler_tarefas()
                
        elif I == "N":
            print("")
            cria_tarefa()

            print("",yes_meme)
            print("\n\nTarefa adicionada\n")
        
        elif I=="E":
            edit_menu()
            
   
    #se I == Q, o programa termina
    return


run()

#o programa termina com uma confirmação de encerramento, e um agradecimento
print("\nPrograma encerrado, obrigado",xauxau_meme)